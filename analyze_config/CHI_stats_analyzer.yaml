include: []
WORKERS: 32
callback:
  "analyze_read_bandwidth_latency": {file: "analyzer/CHID2D_analyzer", func: ["analyze_access_bandwidth", "analyze_access_latency", "analyze_mshr_util", "analyze_copyback_traffic", "analyze_cpu_ipc", "dump_parameters"]}

target:
  "stats.txt":
    totalCpuNumReads:
      pattern: 'system.cpu(\d*).numReads( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    totalCpuNumWrites:
      pattern: 'system.cpu(\d*).numWrites( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    totalDmaNumReads:
      pattern: 'system.dma_devices(\d*).numReads( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    totalDmaNumWrites:
      pattern: 'system.dma_devices(\d*).numWrites( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    totalCpuLatency:
      pattern: 'system.cpu(\d*).totalLatency( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    totalDmaLatency:
      pattern: 'system.dma_devices(\d*).totalLatency( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    ticksPerCycle:
      pattern: 'system.clk_domain.clock( +)(\d+)'
      location: [2]
      type: [int]

    simTicks:
      pattern: 'simTicks( +)(\d+)'
      location: [2]
      type: [int]

    simSeconds:
      pattern: 'simSeconds( +)([\.\d]+)'
      location: [2]
      type: [float]

    simFreq:
      pattern: 'simFreq( +)(\d+)'
      location: [2]
      type: [int]

    totalCPUCycles:
      pattern: 'system.cpu(\d*).*numCycles( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    totalCPUInsts:
      pattern: 'system.cpu(\d*).*numInsts( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    hnfHit:
      pattern: 'system.ruby.hnf[s]*(\d*).cntrl.cache.m_demand_hits( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    hnfMiss:
      pattern: 'system.ruby.hnf[s]*(\d*).cntrl.cache.m_demand_misses( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    hnfacc:
      pattern: 'system.ruby.hnf[s]*(\d*).cntrl.cache.m_demand_accesses( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    l1dhit:
      pattern: 'system.cpu(\d*).l1d.cache.m_demand_hits( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    l1dacc:
      pattern: 'system.cpu(\d*).l1d.cache.m_demand_accesses( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    l2hit:
      pattern: 'system.cpu(\d*).l2.cache.m_demand_hits( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="
    
    l2acc:
      pattern: 'system.cpu(\d*).l2.cache.m_demand_accesses( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    hostSeconds:
      pattern: 'hostSeconds( +)([\.\d]+)'
      location: [2]
      type: [float]

    hostMemory:
      pattern: 'hostMemory( +)(\d+)'
      location: [2]
      type: [int]
    
    l1dTbeUtil:
      pattern: 'system.cpu(\d*).l1d.avg_util( +)([\.\d]+)( +)# TBE Request Utilization \(Unspecified\)'
      location: [3]
      type: [float]
      reduce: "+="
    
    l2RetryAcks:
      pattern: 'system.cpu(\d*).l2.retryAcks( +)(\d+)'
      location: [3]
      type: [int]
      reduce: "+="

    rnfTbeUtil:
      pattern: 'system.cpu(\d*).l2.avg_util( +)([\.\d]+)( +)# TBE Request Utilization \(Unspecified\)'
      location: [3]
      type: [float]
      reduce: "+="

    haTbeUtil:
      pattern: 'system.ruby.hAs(\d*).cntrl.avg_util( +)([\.\d]+)( +)# Avg\. utilization \(Unspecified\)'
      location: [3]
      type: [float]
      reduce: "+="
    
    hnfTbeUtil:
      pattern: 'system.ruby.hnf(s?)(\d*).cntrl.avg_util( +)([\.\d]+)( +)# TBE Request Utilization \(Unspecified\)'
      location: [4]
      type: [float]
      reduce: "+="
    
    snfTbeUtil:
      pattern: 'system.ruby.snf(s?)(\d*).cntrl.avg_util( +)([\.\d]+)( +)# TBE Request Utilization \(Unspecified\)'
      location: [4]
      type: [float]
      reduce: "+="
    
    incomingReqHATraffic :
      pattern: 'system\.ruby\.hAs(\d*)\.cntrl\.inTransLatHist\.(\S+)\.total( +)(\d+)'
      location: [4]
      type: [float]
      reduce: "+="
    
    incomingCopyBackHATraffic :
      pattern: 'system\.ruby\.hAs(\d*)\.cntrl\.inTransLatHist\.(WriteEvictFull|WriteBackFull)\.total( +)(\d+)'
      location: [4]
      type: [float]
      reduce: "+="
    
    dramRdRowHits:
      pattern: 'system.mem_ctrls(\d*).dram.readRowHits( +)([\.\d]+)( +)'
      location: [3]
      type: [float]
      reduce: "+="
    
    dramRdReqs:
      pattern: 'system.mem_ctrls(\d*).readReqs( +)([\.\d]+)( +)'
      location: [3]
      type: [float]
      reduce: "+="
    
    dramWrRowHits:
      pattern: 'system.mem_ctrls(\d*).dram.writeRowHits( +)([\.\d]+)( +)'
      location: [3]
      type: [float]
      reduce: "+="
    
    dramWrReqs:
      pattern: 'system.mem_ctrls(\d*).writeReqs( +)([\.\d]+)( +)'
      location: [3]
      type: [float]
      reduce: "+="
    
    dramAvgAccLat:
      pattern: 'system.mem_ctrls(\d*).dram.avgMemAccLat( +)([\.\d]+)( +)'
      location: [3]
      type: [float]
      reduce: "+="

    parserForceTerminate:
      pattern: '.*End Simulation Statistics.*'
      location: []
      type: []

summary:
  "d2d_stats_analyzed":
    - {data: "hostSeconds", head: "Run Time(s)"}
    - {data: "hostHours", head: "Run Time(h)"}
    - {data: "hostMemory", head: "Memory Usage"}
    - {data: "numNormDirs", head: "Memory Controllers(per Die)"}
    - {data: "numGenCpus", head: "CPUs(total generating)"}
    - {data: "numGenDmas", head: "DMAs(total generating)"}
    - {data: "mem-test-type", head: "Memtest type"}
    - {data: "outstanding-req", head: "CPU Max-Outstanding"}
    - {data: "AccPattern", head: "Access Pattern"}
    - {data: "numNormL3caches", head: "LLCs"}
    - {data: "l1d_size", head: "L1d Size"}
    - {data: "l1d_assoc", head: "L1d Assoc"}
    - {data: "l1i_size", head: "L1i Size"}
    - {data: "l1i_assoc", head: "L1i Assoc"}
    - {data: "l2_size", head: "L2 Size"}
    - {data: "l2_assoc", head: "L2 Assoc"}
    - {data: "l3_size", head: "L3 Size"}
    - {data: "l3_assoc", head: "L3 Assoc"}
    - {data: "num-RNF-TBE", head: "L2 TBEs"}
    # - {data: "num-SNF-TBE", head: "SNF TBEs"}
    # - {data: "HNF_Occupancy", head: "HNF Utilization Avg"}
    # - {data: "SNF_Occupancy", head: "SNF Utilization Avg"}
    # - {data: "simple-ext-link-bw-factor", head: "ext link bw"}
    # - {data: "simple-int-link-bw-factor", head: "int link bw"}
    - {data: "workset", head: "Working Set"}
    - {data: "maxloads", head: "Load Factor"}
    - {data: "totalCpuReadBandWidth", head: "CPU Total Bandwidth(GBps)"}
    - {data: "normCpuReadBandwidth",  head: "CPU Average Bandwidth(GBps)"}
    - {data: "cpuReadLatency", head: "CPU Read Latency(Cycles)"}
    - {data: "totalDmaReadBandWidth", head: "DMA Total Bandwidth(GBps)"}
    - {data: "normDmaReadBandwidth",  head: "DMA Average Bandwidth(GBps)"}
    - {data: "dmaReadLatency", head: "DMA Read Latency(Cycles)"}
    - {data: "L1D_HitRate", head: "L1D_HitRate"}
    - {data: "L2_HitRate", head: "L2_HitRate"}
    - {data: "L3_HitRate", head: "L3_HitRate"}
    - {data: "sys-clock", head: "Frequency"}
    - {data: "dramRowHitRate", head: "DRAM Row Hit Rate"}
    - {data: "dramAvgAccLat", head: "DRAM Avg Acc Lat"}